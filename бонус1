Программа вызывает atoi с нашим первым аргументом, записывет его в переменную n и проверяет, что результат меньше 9, затем запоминает второй аргумент в стек,используя n * 4
Затем он снова проверяет, изменился ли первый параметр в стеке, сравнивая его с 0x574f4c46.
Если мы пройдем вторую проверку, то есть, если данный параметр изменился на «0x574f4c46» после memcpy, программа запускает оболочку с вызовом execl (). Если нет, программа заканчивает работу.

Мы можем переполнить целочисленное значение и пройти первую проверку, переполнив значение INT MAX, чтобы вернуться к маленьким значениям для вызова параметра memcpy.
Отправка, например, -2147483610 заставит memcpy читать символы 0x90 из нашего буфера и сохранять их в другом буфере в стеке (который не может обрабатывать байты 0x90), который мы переполним, чтобы изменить первый параметр argv [1]. Выбранное значение для переполнения буфера может быть другим, нужно просто переполнить буфер.

Смещение переполнения составляет 40 байтов, поэтому мы отправляем «A» * 40 + «\x46\x4c\x4f\x57» (это 0x574f4c46, через argv [2]), чтобы изменить argv [1] и пройти вторую проверку.

./bonus1 -2147483610 `python -c 'print "A"*40 + "\x46\x4c\x4f\x57"'`

Введем cat /home/user/bonus2/.pass
Пароль: 579bd19263eb8655e4cf7b742d75edf8c38226925d78db8163506f5191825245